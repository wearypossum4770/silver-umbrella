# pyproject.toml
# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.
[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }

#==========================================================================================
# PYTEST - TESTING FRAMEWORK https://docs.pytest.org/
#==========================================================================================
[tool.pytest.ini_options]
automock_unlocked = true
DJANGO_SETTINGS_MODULE = "silver_umbrella.settings"
minversion = "6.0"
fail_fast = true
addopts = "-ra -vv --emoji  -p no:warnings"
python_files = [
  "test.py",
  "tests.py",
  "test_*.py",
  "*_test.py",
  "check_*.py",
  "*_check.py",
  "example_*.py",
  "*_example.py"]
python_functions = [
  "suite_*",
  "*_suite",
  "test_*",
  "*_test",
  "check_*",
  "*_check",
  "example_*",
  "*_example",]
python_classes = [
  "Test*",
  "*Test",
  "Check*",
  "Suite*",
  "*Suite",
  "*Check",
  "Example*",
  "*Example",]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  # note the use of single quote below to denote "raw" strings in TOML
  'ignore:function ham\(\) is deprecated:DeprecationWarning',]

#testpaths = ["tests"]
#==========================================================================================
# BLACK - PYTHON FORMATTING TOOL  https://github.com/psf/black
#==========================================================================================
[tool.black]
line-length = 88
#target-version = ['py38',]
include = '\.pyi?$'
exclude = '''(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | redis-6.2.2
  )/
  | foo.py)'''

#==========================================================================================
# ISORT - PYTHON IMPORT SORTING  https://pycqa.github.io/isort/
#==========================================================================================
[tool.isort]
profile = "black"
multi_line_output = 3
