# Generated by Django 3.2.4 on 2021-07-02 15:41

import datetime

import cuid
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "madien_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("nickname", models.CharField(blank=True, max_length=100, null=True)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("middle_name", models.CharField(blank=True, max_length=20, null=True)),
                ("title", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "honorific_prefix",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Mr", "Single or Married Man"),
                            ("Mrs", "Married Woman"),
                            ("Ms", "Single or Married Woman"),
                            ("Dr", "Medical Doctor"),
                            (
                                "Hon",
                                "Honorable (Judge, Justice, other High Ranking Gov official",
                            ),
                            ("Eld", "Elder (religious title)"),
                            ("Fth", "Father (religious title)"),
                            ("Bth", "Brother (religious title)"),
                            ("Sis", "Sister (nun or other female religious leader)"),
                            ("Rev", "Reverand (Religious leader"),
                            ("Rab", "Rabbi (religious leader usually of jewish faith)"),
                        ],
                        default="",
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "honorific_suffix",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PhD", "Doctoralily Educated"),
                            ("Esq", "Esquire, Lawyer"),
                        ],
                        default="",
                        max_length=4,
                        null=True,
                    ),
                ),
                ("suffix", models.CharField(blank=True, max_length=10, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("is_patient", models.BooleanField(default=False)),
                ("is_clinic_staff", models.BooleanField(default=False)),
                ("date_of_death", models.DateField(blank=True, null=True)),
                ("retention_only", models.BooleanField(default=False)),
                ("do_not_contact", models.BooleanField(default=False)),
                ("owasp_safe_password", models.BooleanField(default=False)),
                ("prompt_password_change", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("idempotent_key", models.CharField(default=cuid.cuid, max_length=50)),
                (
                    "address_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MAIL", "Mailing"),
                            ("RESD", "Residential"),
                            ("BUSN", "Business"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                ("street1", models.CharField(max_length=100)),
                ("street2", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("AL", "Alabama"),
                            ("AK", "Alaska"),
                            ("AS", "American Samoa"),
                            ("AZ", "Arizona"),
                            ("AR", "Arkansas"),
                            ("CA", "California"),
                            ("CO", "Colorado"),
                            ("CT", "Connecticut"),
                            ("DE", "Delaware"),
                            ("DC", "District Of Columbia"),
                            ("FM", "Federated States Of Micronesia"),
                            ("FL", "Florida"),
                            ("GA", "Georgia"),
                            ("GU", "Guam"),
                            ("HI", "Hawaii"),
                            ("ID", "Idaho"),
                            ("IL", "Illinois"),
                            ("IN", "Indiana"),
                            ("IA", "Iowa"),
                            ("KS", "Kansas"),
                            ("KY", "Kentucky"),
                            ("LA", "Louisiana"),
                            ("ME", "Maine"),
                            ("MH", "Marshall Islands"),
                            ("MD", "Maryland"),
                            ("MA", "Massachusetts"),
                            ("MI", "Michigan"),
                            ("MN", "Minnesota"),
                            ("MS", "Mississippi"),
                            ("MO", "Missouri"),
                            ("MT", "Montana"),
                            ("NE", "Nebraska"),
                            ("NV", "Nevada"),
                            ("NH", "New Hampshire"),
                            ("NJ", "New Jersey"),
                            ("NM", "New Mexico"),
                            ("NY", "New York"),
                            ("NC", "North Carolina"),
                            ("ND", "North Dakota"),
                            ("MP", "Northern Mariana Islands"),
                            ("OH", "Ohio"),
                            ("OK", "Oklahoma"),
                            ("OR", "Oregon"),
                            ("PW", "Palau"),
                            ("PA", "Pennsylvania"),
                            ("PR", "Puerto Rico"),
                            ("RI", "Rhode Island"),
                            ("SC", "South Carolina"),
                            ("SD", "South Dakota"),
                            ("TN", "Tennessee"),
                            ("TX", "Texas"),
                            ("UT", "Utah"),
                            ("VT", "Vermont"),
                            ("VI", "Virgin Islands"),
                            ("VA", "Virginia"),
                            ("WA", "Washington"),
                            ("WV", "West Virginia"),
                            ("WI", "Wisconsin"),
                            ("WY", "Wyoming"),
                        ],
                        default="TN",
                        max_length=2,
                    ),
                ),
                ("city", models.CharField(max_length=50)),
                ("zipcode", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        default="default.webp", upload_to="raw_profile_pictures"
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("is_public", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "mobile_number",
                    models.CharField(
                        blank=True,
                        help_text="Numbers only no spaces or characters. Example: xxxxxxxxxx",
                        max_length=15,
                        null=True,
                    ),
                ),
                ("internal_notes", models.TextField(blank=True, default="", null=True)),
                ("addresses", models.ManyToManyField(blank=True, to="users.Address")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.CheckConstraint(
                check=models.Q(("date_of_death__lte", datetime.date(2021, 7, 3))),
                name="not_dead_tomorrow",
            ),
        ),
        migrations.AddConstraint(
            model_name="user",
            constraint=models.CheckConstraint(
                check=models.Q(("date_of_birth__lte", datetime.date(2021, 7, 2))),
                name="born_before_today",
            ),
        ),
    ]
